plot(logUnits, logValue, xlab = "logUnits",
ylab = "logValue")
plot(logUnits, logValue, xlab = "logUnits",
ylab = "logValue",
col = factor(housing$after1950))
legend("bottomright", legend = levels(factor(housing$after1950)), fill
= unique(factor(housing$after1950)))
cor(logUnits, logValue)
manHousing <- newHousing[newHousing$Borough == "Manhattan", ]
logManUnits <- log(manHousing$UnitCount)
logManValue <- log(manHousing$Value)
cor(logManUnits, logManValue)
brookHousing <- newHousing[newHousing$Borough == "Brooklyn", ]
logBrookUnits <- log(brookHousing$UnitCount)
logBrookValue <- log(brookHousing$Value)
cor(logBrookUnits, logBrookValue)
before1950Housing <- newHousing[newHousing$YearBuilt < 1950, ]
logBefore1950Units <- log(before1950Housing$UnitCount)
logBefore1950Value <- log(before1950Housing$Value)
cor(logBefore1950Units, logBefore1950Value)
after1950Housing <- newHousing[newHousing$YearBuilt >= 1950, ]
logAfter1950Units <- log(after1950Housing$UnitCount)
logAfter1950Value <- log(after1950Housing$Value)
cor(logAfter1950Units, logAfter1950Value)
plot(logManUnits, logManValue, xlab = "logManUnits",
ylab = "logManValue")
plot(logBrookUnits, logBrookValue, xlab = "logBrookUnits",
ylab = "logBrookValue")
tapply(newHousing$Value, newHousing$Borough == "Manhattan", median)
boxplot(log(Value) ~ Borough, data=newHousing, ylab="log(Value)", xlab="Borough")
tapply(newHousing$Value, newHousing$Borough, median)
knitr::opts_chunk$set(echo = TRUE)
library("ggplot2")
gmp <- read.table("gmp-1.txt", header = TRUE)
gmp$pop <- round(gmp$gmp/gmp$pcgmp)
ggplot(data = gmp) +
geom_point(mapping = aes(x= pop, y=pcgmp))
View(gmp)
library("ggplot2")
gmp <- read.table("gmp-1.txt", header = TRUE)
gmp$pop <- gmp$gmp/gmp$pcgmp
ggplot(data = gmp) +
geom_point(mapping = aes(x= pop, y=pcgmp))
plot(gmp$pop, gmp$pcgmp, log = "x", xlab = "Population", ylab = "Per-capita Economic Output")
plot(gmp$pop, gmp$pcgmp, log = "x", xlab = "Population", ylab = "Per-capita Economic Output")
curve(6611*x^{1/8}, add = TRUE, col = "red")
plot(gmp$pop, gmp$pcgmp, log = "x", xlab = "Population", ylab = "Per-capita Economic Output")
curve(6611*x^{1/8}, add = TRUE, col = "red")
curve(6611*x^{0.1}, add = TRUE, col = "green")
curve(6611*x^{0.15}, add = TRUE, col = "blue")
mse<- function(inVec, popVec = gmp$pop, pcGMPVec = gmp$pcgmp){
beta0 <- inVec[1]
beta1 <- inVec[2]
result <- sum((pcGMPVec - beta0*popVec^beta1)^2)
return result
mse<- function(inVec, popVec = gmp$pop, pcGMPVec = gmp$pcgmp){
beta0 <- inVec[1]
beta1 <- inVec[2]
result <- sum((pcGMPVec - beta0*popVec^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(inVec, popVec = gmp$pop, pcGMPVec = gmp$pcgmp){
beta0 <- inVec[1]
print(beta0)
beta1 <- inVec[2]
print(beta1)
result <- sum((pcGMPVec - beta0*popVec^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(inVec, popVec = gmp$pop, pcGMPVec = gmp$pcgmp){
beta0 <- inVec[1]
print(beta0)
beta1 <- inVec[2]
print(beta1)
result <- sum((pcGMPVec - beta0*popVec^beta1)^2))
mse<- function(inVec, popVec = gmp$pop, pcGMPVec = gmp$pcgmp){
beta0 <- inVec[1]
beta1 <- inVec[2]
result <- sum((pcGMPVec - beta0*popVec^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(inVec, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- inVec[1]
beta1 <- inVec[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (sqrt(result))
}
mse(c(6611, 0.15))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (mean(result))
}
mse(c(6611, 0.15))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse(c(5000, 0.10))
library("ggplot2")
gmp <- read.table("gmp-1.txt", header = TRUE)
gmp$pop <- gmp$gmp/gmp$pcgmp
plot(gmp$pop, gmp$pcgmp, log = "x", xlab = "Population", ylab = "Per-capita Economic Output")
curve(6611*x^{1/8}, add = TRUE, col = "red")
curve(6611*x^{0.1}, add = TRUE, col = "green")
curve(6611*x^{0.15}, add = TRUE, col = "blue")
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse(c(5000, 0.10))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- sum((pcGMP - beta0*pop^beta1)^2)
return (min(result))
}
mse(c(6611, 0.15))
mse(c(5000, 0.10))
nlm(mse, c(beta0 = 6611, beta1 = 1/8))
mse<- function(betas, pop = gmp$pop, pcGMP = gmp$pcgmp){
beta0 <- betas[1]
beta1 <- betas[2]
result <- mean((pcGMP - beta0*pop^beta1)^2)
return (result)
}
mse(c(6611, 0.15))
mse(c(5000, 0.10))
nlm(mse, c(beta0 = 6611, beta1 = 1/8))
f<- function(x){
return(1/pi*(1+x^2))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/pi*(1+x^2))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/pi*(1+x^2))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/pi*(1+x^2))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/pi*(1+x^2))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/pi*(1+x^2))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/(pi*(1+x^2)))
}
x<- seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
plot(x,f(x), type = "1", col = "purple")
x <-seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
f<- function(x){
return(1/(pi*(1+x^2)))
}
x <-seq(-8,8 by=.1)
plot(x,f(x), type = "1", col = "purple")
F.inv <- function(x){
return(tan(pi*(x-1/2)))
}
U <- runif(10000)
Y <- F.inv(U)
head(Y)
hist(Y)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
U <- runif(100)
Y <- F.inv(U)
head(Y)
hist(Y, breaks = 50)
hist(rcauchy(100))
hist(rcauchy(100))
hist(rcauchy(100))
hist(rcauchy(100))
hist(rcauchy(100))
hist(rcauchy(100))
hist(rcauchy(100))
f<- function(x){
return((1/sqrt(2*pi))*exp(-x^2/2))
}
f<- function(x){
return((1/sqrt(2*pi))*exp(-x^2/2))
}
alpha <- 1
e <- function(x){
return(1/(alpha*pi*(1+x^2)))
}
x<- seq(-5,5, by= 0.1)
plot(x,f(x), type = "l", col = "red")
plot(x,f(x), type = "l", col = "red")
lines(x,e(x))
plot(x,f(x), type = "l", col = "red", ; ylim = c( 0, .7))
plot(x,f(x), type = "l", col = "red", ylim = c( 0, .7))
lines(x,e(x))
alpha <- .5
e <- function(x){
return(1/(alpha*pi*(1+x^2)))
}
plot(x,f(x), type = "l", col = "red", ylim = c( 0, .7))
x<- seq(-5,5, by= 0.1)
lines(x,e(x))
n.samps <- 1000
n <- 0
samps <- numeric(n.samps)
while(n<n.samps){
y<-rcauchy(1)
u <- runif(1)
if(u< f(y)/e(y)){
n <- n+1
samps[n] <- y
}
}
x<- seq(-5, 5, length = 100)
hist(samps, prob = T, ylab = "f(x)", xlab = "x", main = "Histogram of draws from N(0,1)")
lines(x,f(x), lty = 2)
hist(rcauchy(100))
n.samps <- 1000
n <- 0
samps <- numeric(n.samps)
while(n<n.samps){
y<-rcauchy(1)
u <- runif(1)
if(u< f(y)/e(y)){
n <- n+1
samps[n] <- y
}
}
x<- seq(-5, 5, length = 100)
hist(samps, prob = T, ylab = "f(x)", xlab = "x", main = "Histogram of draws from N(0,1)")
lines(x,f(x), lty = 2)
hist(rcauchy(100))
n.samps <- 1000
n <- 0
samps <- numeric(n.samps)
while(n<n.samps){
y<-rcauchy(1)
u <- runif(1)
if(u< f(y)/e(y)){
n <- n+1
samps[n] <- y
}
}
x<- seq(-5, 5, length = 100)
hist(samps, prob = T, ylab = "f(x)", xlab = "x", main = "Histogram of draws from N(0,1)")
lines(x,f(x), lty = 2)
hist(rcauchy(100))
hist(samps, prob = T, ylab = "f(x)", xlab = "x", main = "Histogram of draws from N(0,1)")
lines(x,f(x), lty = 2)
hist(rcauchy(100))
hist(samps, prob = T, ylab = "f(x)", xlab = "x", main = "Histogram of draws from N(0,1)")
lines(x,f(x), lty = 2)
X <- runif(n, -1, 1)
hist(X)
4*sqrt(1-X^2)
mean(4*sqrt(1-X^2))
n <- 100000
X <- runif(n, -1, 1)
hist(X)
mean(4*sqrt(1-X^2))
library(MASS)
head(cats)
library(MASS)
head(cats)
library(MASS)
head(cats)
library(MASS)
head(cats)
library(MASS)
head(cats)
library(MASS)
head(cats)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
head(cats)
girlcats <- cats$Sex == "F"
Dhat     <- mean(cats$Hwt[girlcats])-mean(cats$Hwt[!girlcats])
nf   <- sum(girlcats); nm <- sum(!girlcats)
P    <- 10000
sample_diffs <- rep(NA, P)
for (i in 1:P) {
data <- cats$Hwt[sample(1:(nf+nm))]
meanf <- mean(data[1:nf])
meanm <- mean(data[1:nm])
diff[i] <- meanf-meanm
}
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
girlcats <- cats$Sex == "F"
Dhat     <- mean(cats$Hwt[girlcats])-mean(cats$Hwt[!girlcats])
nf   <- sum(girlcats); nm <- sum(!girlcats)
P    <- 10000
sample_diffs <- rep(NA, P)
for (i in 1:P) {
data <- cats$Hwt[sample(1:(nf+nm))]
meanf <- mean(data[1:nf])
meanm <- mean(data[1:nm])
diff[i] <- meanf-meanm
}
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
girlcats <- cats$Sex == "F"
Dhat     <- mean(cats$Hwt[girlcats])-mean(cats$Hwt[!girlcats])
nf   <- sum(girlcats); nm <- sum(!girlcats)
sample_diffs <- rep(NA, P)
P    <- 10000
for (i in 1:P) {
data <- cats$Hwt[sample(1:(nf+nm))]
meanf <- mean(data[1:nf])
meanm <- mean(data[-(1:nm]))
diff[i] <- meanf-meanm
}
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
girlcats <- cats$Sex == "F"
nf   <- sum(girlcats); nm <- sum(!girlcats)
Dhat     <- mean(cats$Hwt[girlcats])-mean(cats$Hwt[!girlcats])
P    <- 10000
sample_diffs <- rep(NA, P)
for (i in 1:P) {
data <- cats$Hwt[sample(1:(nf+nm))]
meanf <- mean(data[1:nf])
meanm <- mean(data[-(1:nm]))
sample_diffs[i] <- meanf-meanm
}
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
girlcats <- cats$Sex == "F"
Dhat     <- mean(cats$Hwt[girlcats])-mean(cats$Hwt[!girlcats])
nf   <- sum(girlcats); nm <- sum(!girlcats)
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
for (i in 1:P) {
data <- cats$Hwt[sample(1:(nf+nm))]
meanf <- mean(data[1:nf])
meanm <- mean(data[-(1:nf]))
sample_diffs[i] <- meanf-meanm
}
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
girlcats <- cats$Sex == "F"
Dhat     <- mean(cats$Hwt[girlcats])-mean(cats$Hwt[!girlcats])
nf   <- sum(girlcats); nm <- sum(!girlcats)
meanm <- mean(data[-(1:nf)])
sample_diffs[i] <- meanf-meanm
for (i in 1:P) {
data <- cats$Hwt[sample(1:(nf+nm))]
meanf <- mean(data[1:nf])
meanm <- mean(data[-(1:nf)])
sample_diffs[i] <- meanf-meanm
}
pval <- mean(abs(sample_diffs) >= abs(Dhat))
pval
