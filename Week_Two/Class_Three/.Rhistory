resample1 <- sample(1:n, n, replace = TRUE)
# Remove the comment symbol in front of the above after n is assigned in B(1)
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
resample1_ests <- coef(lm0[resample1, ])
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# You'll want to type your response to question B(4) here.  Your response should look like:
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resample_rows<-resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
# You'll want to type your response to question B(4) here.  Your response should look like:
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[2] - resampled_ests[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[1] - resampled_ests[1]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[2] - resampled_ests[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[1] - resampled_ests[1]
diff_estimates
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[1] - resampled_ests[1]
diff_estimates
View(diamonds)
View(resampled_data)
View(resampled_data)
View(resampled_values)
hist(resampled_ests)
sd(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- lm0[1] - resampled_ests[1]
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[1] - resampled_ests[1]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[1] - resampled_ests[1]
diff_estimates
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[1] - resampled_ests[1]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resampled_ests[2] - coef(lm0)[2]
diff_estimates
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
lm0
coef(lm0)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resampled1[2] - coef(lm0)[2]
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resampled1_ests[2] - coef(lm0)[2]
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resample1_ests[2] - coef(lm0)[2]
diff_estimates
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resample1_ests[2] - coef(lm0)[2]
diff_estimates
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests[b, ] <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resample1_ests[2] - coef(lm0)[2]
diff_estimates
sd(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
coef(resample1_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(resampled_ests) - coef(lm0)[2]
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(resampled_ests)[2] - coef(lm0)[2]
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resampled_ests[2] - coef(lm0)[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- resampled_ests - coef(lm0)[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[2] - coef(resampled_ests[2])
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[2] - coef(resampled_ests[,2])
?data
data(iris)
?table
?data.frame
iris <- data.frame(iris)
View(iris)
versicolorpetal <- ifelse(iris$Species == "versicolor" && iris$Petal.Length =< 1.2)
versicolorpetal <- ifelse(iris$Species == "versicolor" && iris$Petal.Length <= 1.2)
versicolorpetal <- ifelse(iris$Species == "versicolor" && iris$Petal.Length < 1.2, TRUE, FALSE)
versicolorpetal<- ifelse(iris$Species == "versicolor" && iris$Petal.Length < 1.2, TRUE, FALSE)
versicolorpetal<- ifelse(iris$Species == "versicolor", TRUE, FALSE)
versicolorpetal <-ifelse(iris$Petal.Length < 1.2 , TRUE, FALSE)
iris <- data.frame(iris)
versicolorpetal <- c()
versicolor<- ifelse(iris$Species == "versicolor", TRUE, FALSE)
versicolorpetal <-ifelse(iris$Petal.Length < 1.2 , TRUE, FALSE)
factor(versicolorpetal)
versicolor<- sum(iris$Species == "versicolor" & iris$Petal.Width <= 1.2)
iris <- data.frame(iris)
sum(iris$Species == "versicolor" & iris$Petal.Width <= 1.2)
mean(iris$Species == "setosa")
iris[iris$Specieis == "versicolor,"][iris$Petal.Width <= 1.2]
iris[iris$Specieis == "versicolor",][iris$Petal.Width <= 1.2]
mean(iris[iris$Species == "setosa", "Petal.Length"])
tapply(iris$Petal.Length, iris$Species, mean)
tapply(iris$Petal.Length, iris$Species, mean)[1]
x<- subset(iris$Sepal.Width >= 3)
table(x[,"Species"])
table(iris[iris$Sepal.Width>=3,"Species"])
versicolor <- ifelse(iris$Species == "versicolor", 1, 0)
versicolor
table(versicolor)
iris$versicolor <- versicolor
iris
levels(iris$Species)
hist(iris$Sepal.Width)
?hist
hist(iris$Sepal.Width, xlab = "Sepal Width" , ylab = "Number of Flowers")
plot(iris$Sepal.Width, iris$Sepal.Length, col = iris$Species == "versicolor")
?legend
plot(iris$Sepal.Width, iris$Sepal.Length, col = iris$Species == "versicolor")
legend(iris$Sepal.Width, iris$Sepal.Length, col = iris$Species == "versicolor")
?legend
factor(versicolor)
versifactor<- factor(versicolor)
plot(iris$Sepal.Width, iris$Sepal.Length, col = versifactor)
legend(iris$Sepal.Width, iris$Sepal.Length, legend, col = versifactor)
?legend
legend(iris$Sepal.Width, iris$Sepal.Length, legend, col = versifactor)
versifactor<- factor(versicolor)
plot(iris$Sepal.Width, iris$Sepal.Length, col = versifactor)
legend(iris$Sepal.Width, iris$Sepal.Length, legend, col = versifactor)
boxplot(log(iris$Petal.Length), iris$Species)
plot(iris$Sepal.Width, iris$Sepal.Length, col = versifactor)
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor)
legend(iris$Sepal.Width, iris$Sepal.Length, legend, col = versifactor)
boxplot(log(iris$Petal.Length), iris$Species)
boxplot(iris$Species, log(iris$Petal.Length))
?boxplot
irisfactor <- factor(iris$Species)
boxplot(irisfactor, log(iris$Petal.Length))
?boxplot
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor, xlab = "Sepal Length", ylab = "Sepal Width")
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor, xlab = "Sepal Length", ylab = "Sepal Width", main ="Comparing Sepal Length and Width")
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor, xlab = "Sepal Length", ylab = "Sepal Width", main ="Comparing Sepal Length and Width")
?legend
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor, xlab = "Sepal Length", ylab = "Sepal Width", main ="Comparing Sepal Length and Width")
legend(4,50, col = versifactor)
legend(4,4, col = versifactor)
legend(4,4, legend, col = versifactor)
legend(4,4, legend, col = versifactor, cex = .5)
legend("bottomright",legend, col = versifactor, cex = .5)
legend("bottomright",legend=levels(versifactor), col = versifactor, cex = .5)
legend("bottomright",legend=levels(versifactor), col = versifactor, cex = 5)
legend("bottomright",legend=levels(versifactor), col = versifactor, cex = 1)
iris <- data.frame(iris)
#Possibility One
sum(iris$Species == "versicolor" & iris$Petal.Width <= 1.2)
#Possiblity Two
nrow(iris[iris$Species =="versicolor" & iris$Petal.Width <= 1.2])
#Filtering
mean(iris[iris$Species == "setosa", "Petal.Length"])
#TApply
tapply(iris$Petal.Length, iris$Species, mean)[1]
#Double && Does not work???
#Filtering with table function
table(iris[iris$Sepal.Width>=3,"Species"])
levels(iris$Species)
versicolor <- ifelse(iris$Species == "versicolor", 1, 0)
iris$versicolor <- versicolor
iris
hist(iris$Sepal.Width, xlab = "Sepal Width" , ylab = "Number of Flowers")
versifactor<- factor(versicolor)
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor, xlab = "Sepal Length", ylab = "Sepal Width", main ="Comparing Sepal Length and Width")
legend("bottomright",legend=levels(versifactor), col = versifactor, cex = 1)
irisfactor <- factor(iris$Species)
boxplot(irisfactor, log(iris$Petal.Length))
legend("bottomright",legend=levels(versifactor), col = versifactor, cex = 1)
plot(iris$Sepal.Length, iris$Sepal.Width, col = versifactor, xlab = "Sepal Length", ylab = "Sepal Width", main ="Comparing Sepal Length and Width")
legend("bottomright",legend=levels(versifactor), col = versifactor, cex = 1)
legend("bottomright",legend=levels(versifactor), cex = 1)
legend("bottomright",legend=levels(versifactor), pch=c(1,1) cex = 1)
legend("bottomright",legend=levels(versifactor), pch=c(1,1), cex = 1)
legend("bottomright",legend=levels(versifactor), pch=c(1,1), col = c(1,2), cex = 1)
legend("bottomright",legend=levels(versifactor), pch=c(1,1), col = c(1,length(levels(iris$versicolor))), cex = 1)
legend("bottomright",legend=levels(versifactor), pch=c(1,1), col = c(1,length(levels(iris$Versicolor))), cex = 1)
legend("bottomright",legend=levels(versifactor), pch=c(1,1), col = c(1,length(levels(versifactor))), cex = 1)
irisfactor <- factor(iris$Species)
boxplot(irisfactor, log(iris$Petal.Length)
?boxplot
boxplot(irisfactor, log(iris$Petal.Length)
?boxplot
boxplot(iris$Petal.Length ~ iris$Species)
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests[b, ] <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- coef(lm0)[2] - mean(resample1_ests[b])
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- coef(lm0)[2] - mean(resample1_ests)
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- coef(lm0)[2] - mean(resample1_ests[1])
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- coef(lm0)[2] - mean(resample1_ests[2])
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- coef(lm0)[1] - mean(resample1_ests[1])
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- coef(lm0)[1] - median(resample1_ests[1])
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- coef(lm0)[2] - median(resample1_ests[2])
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
mean(resample1_ests[1])
diff_estimates <- median(resample1_ests[2]) - coef(lm0)[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- mean(resample1_ests[2]) - coef(lm0)[2]
diff_estimates
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- mean(resample1_ests[2]) - coef(lm0)[2]
diff_estimates
hist(resampled_ests)
hist(resampled_ests[1])
hist(resampled_ests[2])
hist(resampled_ests)
hist(resampled_ests[, 2])
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# resampled_data <- diamonds[resample1, ]
# Remove the comment symbol in front of the above after resample1 is assigned in B(2)
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests[b, ] <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
# You'll want to type your response to question B(5) here.  Your response should look like:
diff_estimates <- mean(resample1_ests[2]) - coef(lm0)[2]
diff_estimates
hist(resampled_ests[, 2])
sd(resampled_ests)
View(resampled_data)
View(resampled_ests)
View(resampled_data)
View(diamonds)
