#Finding random sampling here
n <- 100
data < runif(n, min = 0, max = 10)
data
hist(data)
#Repeating 1000 times
R <- 1000
samp.dist <-rep(0, R)
#Find the Max for each Repeat
for(i in 1:R){
data <-runif(n, min = 0, max= 10)
max(data)
}
#Sample distribution of the Maximum
head(samp.dist)
hist(samp.dist)
#Finding random sampling here
n <- 100
data < runif(n,min=0,max=10)
data
hist(data)
#Repeating 1000 times
R <- 1000
samp.dist <-rep(0,R)
#Find the Max for each Repeat
for(i in 1:R){
data <-runif(n,min=0,max=10)
samp.dist[i]
}
#Sample distribution of the Maximum
head(samp.dist)
hist(samp.dist)
#Finding random sampling here
n <- 100
data < runif(n,min=0,max=10)
data
hist(data)
#Repeating 1000 times
R <- 1000
samp.dist <-rep(0,R)
#Find the Max for each Repeat
for(i in 1:R){
data <-runif(n,min=0,max=10)
samp.dist[i] <- mean(data)
}
#Sample distribution of the Maximum
head(samp.dist)
hist(samp.dist)
data
data <-rnorm(n, mean= mu, sd=1)
set.seed(0)
n <- 100
mu <- 2
data <-rnorm(n, mean= mu, sd=1)
data <-rnorm(n, mean= mu, sd=1)
data
set.seed(0)
n <- 100
mu <- 2
data <-rnorm(n, mean= mu, sd=1)
B <- 1000
mean.boot <-rep(0,B)
for (b in B){
data.boot <- sample(data,n,replace=TRUE)
mean.boot[b]  <- mean(data.boot)
}
hist(mean.boot)
set.seed(0)
n <- 100
mu <- 2
data <-rnorm(n, mean= mu, sd=1)
B <- 1000
mean.boot <-rep(0,B)
for (b in 1:B){
data.boot <- sample(data,n,replace=TRUE)
mean.boot[b]  <- mean(data.boot)
}
hist(mean.boot)
var(mean.boot)
getwd
getwd()
setwd("~/Desktop/Stats-Class/Week_Two/Class_Three")
setwd("~/Desktop/Stats-Class/Week_Two/Class_Three")
#setwd("~/Desktop/Stats-Class/Week_Two/Class_Three")
diamonds <- read.csv("diamonds_small.csv", as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrows(diamonds)
#setwd("~/Desktop/Stats-Class/Week_Two/Class_Three")
diamonds <- read.csv("diamonds_small.csv", as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrows(diamonds)
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
set.seed(0)
n <- 200
x <-runif(0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x)
set.seed(0)
n <- 200
x <-runif(0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x)
set.seed(0)
n <- 200
x <-runif(n, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x)
set.seed(0)
n <- 200
x <-runif(200, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x, y)
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
set.seed(0)
n <- 200
x <-runif(200, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x, y)
data <-data.frame(x,y)
B <- 1000
slope.boot <-rep(0,B)
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
slope.boot[b]  <- coef(model.boot)
slope.boot[b]  <- coef(model.boot)
for (b in 1:B){
#For bootstrapping a data frame you have to do it by pairs (x and y pair) find the indexes
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
slope.boot[b]  <- coef(model.boot)
slope.boot[b]  <- coef(model.boot)
coef(model.boot)[2]
coef(model.boot)
coef(model.boot)
set.seed(0)
n <- 200
x <-runif(200, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x, y)
data <-data.frame(x,y)
B <- 1000
slope.boot <-rep(0,B)
for (b in 1:B){
#For bootstrapping a data frame you have to do it by pairs (x and y pair) find the indexes
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
slope.boot[b]  <- coef(model.boot)
}
coef(model.boot)
set.seed(0)
n <- 200
x <-runif(200, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x, y)
data <-data.frame(x,y)
B <- 1000
slope.boot <-rep(0,B)
for (b in 1:B){
#For bootstrapping a data frame you have to do it by pairs (x and y pair) find the indexes
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
slope.boot[b]  <- coef(model.boot)[2]
}
hist(slope.boot)
set.seed(0)
n <- 200
x <-runif(200, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x, y)
data <-data.frame(x,y)
B <- 1000
slope.boot <-rep(0,B)
for (b in 1:B){
#For bootstrapping a data frame you have to do it by pairs (x and y pair) find the indexes
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
slope.boot[b]  <- coef(model.boot)[2]
}
hist(slope.boot)
set.seed(0)
n <- 200
x <-runif(200, 0, 10)
y <- 2-3.5*x+rnorm(n,sd=5)
plot(x, y)
data <-data.frame(x,y)
B <- 1000
slope.boot <-rep(0,B)
for (b in 1:B){
#For bootstrapping a data frame you have to do it by pairs (x and y pair) find the indexes
index.boot <- sample(1:n,n,replace=TRUE)
# In order to index our rows in the data set we set the new indexes as rows
data.boot <- data[index.boot, ]
model.boot <- lm(y~x,data=data.boot)
slope.boot[b]  <- coef(model.boot)[2]
}
hist(slope.boot)
set.seed(1) # Please don't remove this code!
set.seed(1) # Please don't remove this code!
set.seed(1) # Please don't remove this code!
#setwd("~/Desktop/Stats-Class/Week_Two/Class_Three")
diamonds <- read.csv("diamonds_small.csv", as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
# Remove the comment symbol in front of the above after n is assigned in B(1)
set.seed(1) # Please don't remove this code!
#setwd("~/Desktop/Stats-Class/Week_Two/Class_Three")
diamonds <- read.csv("diamonds_small.csv", as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
resample1
diamonds
?lm
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv", as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(diamonds$price~diamonds$carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv", as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(diamonds$price~diamonds$carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(diamonds$price~diamonds$carat, data = diamonds)
coef(lm0)
resample1 <- sample(1:n, n, replace = TRUE)
# Remove the comment symbol in front of the above after n is assigned in B(1)
# You'll want to type your response to question B(2) here.  Your response should look like:
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
# You'll want to type your response to question B(2) here.  Your response should look like:
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1 <- sample(1:n, n, replace = TRUE)
# Remove the comment symbol in front of the above after n is assigned in B(1)
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
resample1_ests <- coef(lm0[resample1, ])
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
set.seed(1) # Please don't remove this code!
# You'll want to type your response to question A(1) here.  Your response should look like:
# setwd("~/Desktop/Data/")
diamonds <- read.csv("diamonds_small.csv",as.is = TRUE, header = TRUE)
rows       <- dim(diamonds)[1]
diamonds <- diamonds[sample(1:rows, 2000), ]
lm0 <- lm(price~carat, data = diamonds)
coef(lm0)
# You'll want to type your response to question B(1) here.  Your response should look like:
n <- nrow(diamonds)
n
resample1 <- sample(1:n, n, replace = TRUE)
B <- 1000
resampled_values <- matrix(NA, nrow = B, ncol = n)
for (b in 1:B) {
resampled_values[b, ] <- sample(1:n,n,replace=TRUE)
}
resample1_ests <- coef(lm(price~carat, data=diamonds[resample1, ]))
resample1_ests
# You'll want to type your response to question B(4) here.  Your response should look like:
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resample_rows<-resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
# You'll want to type your response to question B(4) here.  Your response should look like:
# Extra Credit if you can use an apply statement
resampled_ests <- matrix(NA, nrow = B, ncol = 2)
names(resampled_ests) <- c("Intercept_Est", "Slope_Est")
for (b in 1:B) {
resampled_rows <- resampled_values[b,]
resampled_data <- diamonds[resampled_rows, ]
resampled_ests <- coef(lm(price~carat, data = resampled_data))
}
head(resampled_ests)
