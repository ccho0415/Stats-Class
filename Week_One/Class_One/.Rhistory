setwd("~/Desktop/Stats_Class")
casablanca_pic <- read.pnm("casablanca.pgm")
casablanca_pic
#Cannot use package until you use library function
library("pixmap")
#Call the Working Data
setwd("~/Desktop/Stats_Class")
casablanca_pic <- read.pnm("casablanca.pgm")
casablanca_pic
install.packages("tidyverse")
install.packages(c("nycflights13", "gapminder", "Lahman"))
1+2
dput(mtcars)
mtcars
this_is_a_really_long_name <- 2.5
this_is_a_really_long_name <- 3.5
this_is_a_really_long_name
r_rocks <- 2 ^ 3
r_rocks
R_rocks
seq(1,10)
my_variable
my_variable
my_varıable
seq(1,10)
my_variable
my_cat
cat
my_tiger
tiger
this_is_a_really_long_name
tiger
tiger
my_tiger
this_is_a_really_long_name
tiger <- 10
tiger
my_tiger
my_tiger
tiger <- 10
tiger <- 10
tiger
my_tiger <- 100
my_tiger
this_is_a_really_long_name <- 3.5
this_is_a_really_long_name <- 3.5
this_is_a_really_long_name
tiger <- 10
my_variable <- 10
my_variable <- 10
tiger <- 10
my_variable
my_variable <- 10
my_variable
my_variable <- 10
my_varıable
filter(diamond, carat > 3)
library(tidyverse)
ggplot(dota = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
fliter(mpg, cyl = 8)
filter(diamond, carat > 3)
library(tidyverse)
ggplot(dota = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
fliter(mpg, cyl = 8)
filter(diamond, carat > 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(mpg, cyl = 8)
filter(diamond, carat > 3)
filter(mpg, cyl == 8)
filter(diamond, carat > 3)
ggplot(data = diamond) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(diamonds, carat > 3)
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(mpg, cyl == 8)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(diamonds, carat > 3)
filter(diamond, carat > 3)
ggplot(data = diamond) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(diamond, carat > 3)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(diamonds, carat > 3)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = displ, y = carat))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = cut, y = carat))
filter(diamonds, carat > 3)
normal100 <- rnorm(n=100)
sd(normal100)
mean(normal100)
mean(normal100)
sd(normal100)
normal100 <- rnorm(n = 100)
sd(normal100)
mean(normal100)
set.seed(1) # Please don't remove this code!
rnorm(n = 5, mean = 10, sd = 3)
normal100 <- rnorm(n = 100)
sd(normal100)
mean(normal100)
?hist
hist(normal100)
set.seed(1) # Please don't remove this code!
rnorm(n = 5, mean = 10, sd = 3)
normal100 <- rnorm(n = 100)
sd(normal100)
mean(normal100)
set.seed(1) # Please don't remove this code!
rnorm(n = 5, mean = 10, sd = 3)
normal100 <- rnorm(n = 100)
sd(normal100)
mean(normal100)
hist(normal100)
normal10 <- rnorm(n=10)
normal1000 <- rnorm(n=1000)
normal10000 <- rnorm(n=10000)
normal100000 <- rnorm(n=100000)
?rnorm
normal1mil <- rnorm(n=1000000, mean=3, sd=4)
mean(normal1mil)
sd(normal1mil)
sample_means <- c(normal10, normal100, normal1000, normal10000, normal100000)
sample_means
length(sample_means)
sample_means
print(sample_means)
sample_means <- (normal10, normal100, normal1000, normal10000, normal100000)
sample_means <- c(normal10, normal100, normal1000, normal10000, normal100000)
sample_means <- (normal10, normal100, normal1000, normal10000, normal100000)
sample_means <- ("normal10", "normal100", "normal1000", "normal10000", "normal100000")
sample_means <- (first=normal10, second=normal100, third=normal1000, fourth=normal10000, fifth=normal100000)
sample_means <- data.frame(first=normal10, second=normal100, third=normal1000, fourth=normal10000, fifth=normal100000)
print(sample_means)
length(sample_means)
print(sample_means)
sample_means <- data.frame(first=normal10, second=normal100, third=normal1000, fourth=normal10000, fifth=normal100000)
?filter
?matrix
matrix(data = normal1mil, nrow = 100, ncol = 10,000)
normal1mil <- rnorm(n=1000000, mean=3, sd=4)
matrix(data = normal1mil, nrow = 100, ncol = 10,000)
matrix(data = normal1mil, nrow = 100, ncol = 10000)
normal1mil_mat <- matrix(data = normal1mil, nrow = 100, ncol = 10000)
normal1mil_mat
set.seed(1) # Please don't remove this code!
rnorm(n = 5, mean = 10, sd = 3)
normal100 <- rnorm(n = 100)
sd(normal100)
mean(normal100)
hist(normal100)
normal10 <- rnorm(n=10)
normal1000 <- rnorm(n=1000)
normal10000 <- rnorm(n=10000)
normal100000 <- rnorm(n=100000)
sample_means <- data.frame(first=normal10, second=normal100, third=normal1000, fourth=normal10000, fifth=normal100000)
print(sample_means)
length(sample_means)
normal1mil <- rnorm(n=1000000, mean=3, sd=4)
mean(normal1mil)
sd(normal1mil)
greaterthan3
greaterthan3 <- which(normal1mil > 3)
greaterthan3 <- which(normal1mil > 3)
greaterthan3
normal1mil <- rnorm(n=1000000, mean=3, sd=4)
greaterthan3 <- which(normal1mil > 3)
greaterthan3 <- which(normal1mil > 3)
normal1mil <- rnorm(n=1000000, mean=3, sd=4)
greaterthan3 <- which(normal1mil > 3)
greaterthan3
mean(greaterthan3)
greaterthan3 <- which(normal1mil > 3)
mean(greaterthan3)
?w
greaterthan3 <- normal1mil[normal1mil > 3]
mean(greaterthan3)
greaterthan3
normal1mil
normal1mil <- rnorm(n=1000000, mean=3, sd=4)
rnorm(n = 5, mean = 10, sd = 3)
?c
?colSums
milColSums <- colSums(normal1mil_mat)
milColSums
hist(milColSums)
mean(normal1mil_mat[,1234])
