stopifnot(length(NewPoint) == 5)
dists       <- sqrt((Lag1-NewPoint[1])^2 + (Lag2-NewPoint[2])^2 + (Lag3-NewPoint[3])^2 + (Lag4-NewPoint[4])^2 + (Lag5-NewPoint[5])^2)
market  <- order(dists)[1:K]
market.dir <- Weekly$Direction[market]
choice      <- names(which.max(table(market.dir)))
return(choice)
}
KNN.decision(c(1,2,3,4,5))
test <- Weekly[Weekly$Year >= 2009, ]
train <- Weekly[Weekly$Year < 2009, ]
max <- nrow(test)
predictions <- rep(NA, max)
for(i in 1:max){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=5, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err <- sum(predictions != test$Direction)/max
test.err
test <- Weekly[Weekly$Year >= 2009, ]
train <- Weekly[Weekly$Year < 2009, ]
max <- nrow(test)
predictions <- rep(NA, max)
for(i in 1:max){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=3, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err <- sum(predictions != test$Direction)/max
test.err
fold <- rep(1:9, 121)
reorder<- sample(fold)
n <- nrow(Weekly)
test.err<- NULL
predictions <- rep(NA, n)
for(k in 1:9){
test <- Weekly[reorder ==k, ]
train <- Weekly[reorder !=k, ]
for (i in 1:n){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=5, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err[k] <- sum(predictions != test$Direction)/max
}
test.err
n <- nrow(Weekly)
test.err.1<- NULL
predictions <- rep(NA, n)
for(k in 1:9){
test <- Weekly[reorder ==k, ]
train <- Weekly[reorder !=k, ]
for (i in 1:n){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=1, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err.1[k] <- sum(predictions != test$Direction)/max
}
test.err.1
n <- nrow(Weekly)
test.err.3<- NULL
predictions <- rep(NA, n)
for(k in 1:9){
test <- Weekly[reorder ==k, ]
train <- Weekly[reorder !=k, ]
for (i in 1:n){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=3, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err.3[k] <- sum(predictions != test$Direction)/max
}
test.err.3
n <- nrow(Weekly)
test.err.7<- NULL
predictions <- rep(NA, n)
for(k in 1:9){
test <- Weekly[reorder ==k, ]
train <- Weekly[reorder !=k, ]
for (i in 1:n){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=7, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err.7[k] <- sum(predictions != test$Direction)/max
}
test.err.7
n <- nrow(Weekly)
test.err.7<- NULL
predictions <- rep(NA, n)
for(k in 1:9){
test <- Weekly[reorder ==k, ]
train <- Weekly[reorder !=k, ]
for (i in 1:n){
insert <- c(test$Lag1[i], test$Lag2[i], test$Lag3[i], test$Lag4[i], test$Lag5[i])
predictions[i]<-KNN.decision(insert, K=7, Lag1 = train$Lag1, Lag2 = train$Lag2, Lag3 = train$Lag3, Lag4 = train$Lag4, Lag5 = train$Lag5)
}
test.err.7[k] <- sum(predictions != test$Direction)/max
}
test.err.7
max = nrow(Auto.new)
#install.packages("ISLR")
library(ISLR)
head(Auto,3)
nrow(Auto)
Auto.6.cyl <- Auto[Auto$cylinders==6,]
beta.hats <- coef(lm(acceleration~weight,data=Auto.6.cyl))
beta.hats
set.seed(0)
B <- 1000
n <- nrow(Auto.6.cyl)
slopes.boot <- rep(NA,B)
for (b in 1:B) {
sample.boot <- sample(1:n, n, replace = TRUE )
regression.boot <- lm(acceleration~weight,data=Auto.6.cyl[sample.boot,])
slopes.boot[b] <- coef(regression.boot)[2]
}
slope.hat <- beta.hats[2]
LL <- 2*slope.hat-quantile(slopes.boot,.975)
UL <- 2*slope.hat-quantile(slopes.boot,.025)
c(LL,UL)
hist(slopes.boot, breaks = 30)
newdata <- rbind(Auto[Auto$cylinders == "4",], Auto[Auto$cylinders =="6",], Auto[Auto$cylinders =="8",])
Auto.new <- data.frame(newdata)
dim(Auto.new)
head(Auto$name)
max = nrow(Auto.new)
Auto.new$name <- as.character(Auto.new$name)
for(i in 1:max){
new <- strsplit(Auto.new$name[i], split = " ")
unlistnew <- unlist(new)
titlecompany <- unlistnew[1]
titlecompany
Auto.new$company[i] <- titlecompany
}
head(Auto.new, 3)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration)~log(this_data$weight)) abline(this_lm, col = col_counter)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration)~log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter +1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration)~log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter +1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(Auto.new$cylinders)
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration)~log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter +1
}
#install.packages("ISLR")
library(ISLR)
head(Auto,3)
nrow(Auto)
Auto.6.cyl <- Auto[Auto$cylinders==6,]
beta.hats <- coef(lm(acceleration~weight,data=Auto.6.cyl))
beta.hats
set.seed(0)
B <- 1000
n <- nrow(Auto.6.cyl)
slopes.boot <- rep(NA,B)
for (b in 1:B) {
sample.boot <- sample(1:n, n, replace = TRUE )
regression.boot <- lm(acceleration~weight,data=Auto.6.cyl[sample.boot,])
slopes.boot[b] <- coef(regression.boot)[2]
}
slope.hat <- beta.hats[2]
LL <- 2*slope.hat-quantile(slopes.boot,.975)
UL <- 2*slope.hat-quantile(slopes.boot,.025)
c(LL,UL)
hist(slopes.boot, breaks = 30)
newdata <- rbind(Auto[Auto$cylinders == "4",], Auto[Auto$cylinders =="6",], Auto[Auto$cylinders =="8",])
Auto.new <- data.frame(newdata)
dim(Auto.new)
head(Auto$name)
max = nrow(Auto.new)
Auto.new$name <- as.character(Auto.new$name)
for(i in 1:max){
new <- strsplit(Auto.new$name[i], split = " ")
unlistnew <- unlist(new)
titlecompany <- unlistnew[1]
titlecompany
Auto.new$company[i] <- titlecompany
}
head(Auto.new, 3)
loc1<-grep("toyouta", Auto.new$name)
Auto.new$name[loc1] <- "toyota corona mark ii(sw)"
loc2<-grep("vokswagen", Auto.new$name)
Auto.new$name[loc2] <- "volkswagen rabbit"
Auto.new$name[loc1]
Auto.new$name[loc2]
horsemax <- tapply(Auto.new$horsepower, Auto.new$company, max)
horsemax
variables <- c("mpg","displacement","horsepower","weight","acceleration")
apply(Auto.new[variables],2,mean)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(Auto.new$cylinders)
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration)~log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter +1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders)
col_counter <- 1
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration)~log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter +1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders){
this_cylinder <- Auto.new$cylinders == i
this_data <- Auto.new[this_cylinder, ]
this_lm <- lm(log(this_data$acceleration) ~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter +1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$weight)
~ log(this_data$acceleration))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
this_cylinder
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders[i]
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders[,i]
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
View(this_data)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
abline(lm(log(this_data$acceleration)~log(this_data$weight), col = 2)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
abline((lm(log(this_data$acceleration)~log(this_data$weight)), col = 2)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
abline((lm(log(this_data$acceleration)~log(this_data$weight))
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
abline(this_lm, col = 2
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
abline(this_lm, col = 2)
set.seed(0)
B <- 1000
n <- nrow(Auto.6.cyl)
slopes.boot <- rep(NA,B)
for (b in 1:B) {
sample.boot <- sample(1:n, n, replace = TRUE )
regression.boot <- lm(acceleration~weight,data=Auto.6.cyl[sample.boot,])
slopes.boot[b] <- coef(regression.boot)[2]
}
slope.hat <- beta.hats[2]
LL <- 2*slope.hat-quantile(slopes.boot,.975)
UL <- 2*slope.hat-quantile(slopes.boot,.025)
c(LL,UL)
summary(slope.hat)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm(log(this_data$acceleration)
~ log(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm((this_data$acceleration)
~(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
#install.packages("ISLR")
library(ISLR)
head(Auto,3)
nrow(Auto)
Auto.6.cyl <- Auto[Auto$cylinders==6,]
beta.hats <- coef(lm(acceleration~weight,data=Auto.6.cyl))
beta.hats
set.seed(0)
B <- 1000
n <- nrow(Auto.6.cyl)
slopes.boot <- rep(NA,B)
for (b in 1:B) {
sample.boot <- sample(1:n, n, replace = TRUE )
regression.boot <- lm(acceleration~weight,data=Auto.6.cyl[sample.boot,])
slopes.boot[b] <- coef(regression.boot)[2]
}
slope.hat <- beta.hats[2]
LL <- 2*slope.hat-quantile(slopes.boot,.975)
UL <- 2*slope.hat-quantile(slopes.boot,.025)
c(LL,UL)
hist(slopes.boot, breaks = 30)
newdata <- rbind(Auto[Auto$cylinders == "4",], Auto[Auto$cylinders =="6",], Auto[Auto$cylinders =="8",])
Auto.new <- data.frame(newdata)
dim(Auto.new)
head(Auto$name)
max = nrow(Auto.new)
Auto.new$name <- as.character(Auto.new$name)
for(i in 1:max){
new <- strsplit(Auto.new$name[i], split = " ")
unlistnew <- unlist(new)
titlecompany <- unlistnew[1]
titlecompany
Auto.new$company[i] <- titlecompany
}
head(Auto.new, 3)
loc1<-grep("toyouta", Auto.new$name)
Auto.new$name[loc1] <- "toyota corona mark ii(sw)"
loc2<-grep("vokswagen", Auto.new$name)
Auto.new$name[loc2] <- "volkswagen rabbit"
Auto.new$name[loc1]
Auto.new$name[loc2]
horsemax <- tapply(Auto.new$horsepower, Auto.new$company, max)
horsemax
variables <- c("mpg","displacement","horsepower","weight","acceleration")
apply(Auto.new[variables],2,mean)
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm((this_data$acceleration)
~(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
plot(Auto.new$weight, Auto.new$acceleration, col= factor(Auto.new$cylinders))
legend("bottomright", legend = levels(factor(Auto.new$cylinders)), fill = unique(factor(Auto.new$cylinders)))
cylinders <- levels(factor(Auto.new$cylinders))
col_counter <- 1
for (i in cylinders) {
this_cylinder    <- Auto.new$cylinders == i
this_data   <- Auto.new[this_cylinder, ]
this_lm     <- lm((this_data$acceleration)
~(this_data$weight))
abline(this_lm, col = col_counter)
col_counter <- col_counter + 1
}
