resampled_data <- prostate[resampled_rows, ]
resampled_ests[b, ]<-glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
resampled_ests[b,]<-glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
resampled_ests[b,]<-coefficients(glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit")))
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
print(model)
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
print(resampled_data)
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = B, ncol = n)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = B, ncol = n)
print(resampled_values)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
print(sample.index)
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = B, ncol = n)
print(resampled_values)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
print(sample.index)
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = 1, ncol = n)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
print(sample.index)
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = 1, ncol = n)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b] <- sample.index
resampled_rows <- resampled_values[b]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
print(sample.index)
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = B, ncol = n)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index[b]
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
print(sample.index)
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = B, ncol = n)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:97){
resampled_values[b, ] <- sample.index[b, ]
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_ests <- matrix(NA, nrow = length(sample.index), ncol = 8 )
resampled_values <-matrix(NA, nrow = B, ncol = n)
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
for(b in 1:n){
print(sample.index)
resampled_values[b, ] <- sample.index[b]
resampled_rows <- resampled_values[b, ]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
resampled_ests[b,]<-model$coefficients
}
return(resampled_ests)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
}
return(model$coefficients)
n = 97
boot.coef<- function(sample.index, data=prostate){
colnames(resampled_ests) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7", "Y")
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_rows <- sample.index[b]
resampled_data <- prostate[resampled_rows, ]
print(resampled_data)
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_rows <- sample.index[b]
print(resampled_rows)
resampled_data <- prostate[resampled_rows, ]
print(resampled_data)
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_rows <- sample.index
print(resampled_rows)
resampled_data <- prostate[resampled_rows, ]
print(resampled_data)
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_rows <- sample.index
resampled_data <- prostate[resampled_rows, ]
Y <- resampled_data$Y
X1 <- resampled_data$X1
X2 <- resampled_data$X2
X3 <- resampled_data$X3
X4 <- resampled_data$X4
X5 <- resampled_data$X5
X6 <- resampled_data$X6
X7 <- resampled_data$X7
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
apply.boot<- apply(sample.matrix,2,boot.coef)
sd(apply.boot["X1",])
sd(apply.boot["X2",])
sd(apply.boot["X3",])
sd(apply.boot["X4",])
sd(apply.boot["X5",])
sd(apply.boot["X6",])
sd(apply.boot["X7",])
apply.boot<- apply(sample.matrix,2,boot.coef)
sd(apply.boot["X1",])
sd(apply.boot["X2",])
sd(apply.boot["X3",])
sd(apply.boot["X4",])
sd(apply.boot["X5",])
sd(apply.boot["X6",])
sd(apply.boot["X7",])
Cl <- quantile(apply.boot["X1", ], 0.025)
Cl.X1 <- quantile(apply.boot["X1", ], 0.025)
Cl.X2 <- quantile(apply.boot["X2", ], 0.025)
Cl.X3 <- quantile(apply.boot["X3", ], 0.025)
Cl.X4 <- quantile(apply.boot["X4", ], 0.025)
Cl.X5 <- quantile(apply.boot["X5", ], 0.025)
Cl.X6 <- quantile(apply.boot["X6", ], 0.025)
Cl.X7 <- quantile(apply.boot["X7", ], 0.025)
Cl.Y <- quantile(apply.boot["Y", ], 0.025)
Cl.X1 <- quantile(apply.boot["X1", ], 0.025)
Cl.X2 <- quantile(apply.boot["X2", ], 0.025)
Cl.X3 <- quantile(apply.boot["X3", ], 0.025)
Cl.X4 <- quantile(apply.boot["X4", ], 0.025)
Cl.X5 <- quantile(apply.boot["X5", ], 0.025)
Cl.X6 <- quantile(apply.boot["X6", ], 0.025)
Cl.X7 <- quantile(apply.boot["X7", ], 0.025)
Cl.Y <- quantile(apply.boot["(Intercept)", ], 0.025)
Cu.X1 <- quantile(apply.boot["X1",], 0.0975)
Cu.X2 <- quantile(apply.boot["X2",], 0.0975)
Cu.X3 <- quantile(apply.boot["X3",], 0.0975)
Cu.X4 <- quantile(apply.boot["X4",], 0.0975)
Cu.X5 <- quantile(apply.boot["X5",], 0.0975)
Cu.X6 <- quantile(apply.boot["X6",], 0.0975)
Cu.X7 <- quantile(apply.boot["X7",], 0.0975)
Cu.Y <- quantile(apply.boot["(Intercept)",], 0.0975)
Cl.X1 <- quantile(apply.boot["X1", ], 0.05)
Cl.X2 <- quantile(apply.boot["X2", ], 0.05)
Cl.X3 <- quantile(apply.boot["X3", ], 0.05)
Cl.X4 <- quantile(apply.boot["X4", ], 0.05)
Cl.X5 <- quantile(apply.boot["X5", ], 0.05)
Cl.X6 <- quantile(apply.boot["X6", ], 0.05)
Cl.X7 <- quantile(apply.boot["X7", ], 0.05)
Cl.Y <- quantile(apply.boot["(Intercept)", ], 0.05)
Cu.X1 <- quantile(apply.boot["X1",], 0.095)
Cu.X2 <- quantile(apply.boot["X2",], 0.095)
Cu.X3 <- quantile(apply.boot["X3",], 0.095)
Cu.X4 <- quantile(apply.boot["X4",], 0.095)
Cu.X5 <- quantile(apply.boot["X5",], 0.095)
Cu.X6 <- quantile(apply.boot["X6",], 0.095)
Cu.X7 <- quantile(apply.boot["X7",], 0.095)
Cu.Y <- quantile(apply.boot["(Intercept)",], 0.095)
View(sample.matrix)
View(apply.boot)
plot(prostate$x1, prostate$y)
plot(prostate$X1, prostate$Y)
plot(prostate$X1, prostate$Y)
abline(v=min(data$X1),lty=2,col=1)
plot(prostate$X1, prostate$Y)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
plot(prostate$X1, prostate$Y)
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
plot(prostate$X1, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
plot(prostate$X1, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
x.pred <- seq(-1,250,by=1)
linear.pred <- predict(model,newdata=data.frame(x=x.pred))
plot(prostate$X1, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
x.pred <- seq(-1,250,by=1)
linear.pred <- predict(model,newdata=data.frame(X1=x.pred))
plot(prostate$X1, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
x.pred <- seq(-1,250,by=1)
linear.pred <- predict(model,newdata=data.frame(x=7))
plot(prostate$X1, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
x.pred <- seq(-1,250,by=1)
linear.pred <- predict(model,newdata=data.frame(x=x.pred))
plot(prostate$X1, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X1),lty=2,col=1)
abline(v=max(prostate$X1),lty=2,col=1)
plot(prostate$X2, prostate$Y, ylim=c(-.2,1.2))
abline(h=0,lty=3)
abline(h=1,lty=3)
abline(v=min(prostate$X2),lty=2,col=1)
abline(v=max(prostate$X2),lty=2,col=1)
View(apply.boot)
View(apply.boot)
mean(apply.boot["X2", ])
mean(apply.boot["X3", ])
mean(apply.boot["X4", ])
mean(apply.boot["X5", ])
mean(apply.boot["X6", ])
mean(apply.boot["X7", ])
summary(model)
prostate <- read.table("FinalExam.txt")
head(prostate)
prostate$Y <- ifelse(prostate$Y==8,1,0)
head(prostate)
nrow(prostate)
logistic.NLL <- function(b,data=prostate) {
b0 <- b[1]
b1 <- b[2]
b2 <- b[3]
b3 <- b[4]
b4 <- b[5]
b5 <- b[6]
b6 <- b[7]
b7 <- b[8]
x1 <- data$X1
x2 <- data$X2
x3 <- data$X3
x4 <- data$X4
x5 <- data$X5
x6 <- data$X6
x7 <- data$X7
y <- data$Y
#The corresponding probalities that the x matches y
p.i <- exp(b0+b1*x1+b2*x2+b3*x3+b4*x4+b5*x5+b6*x6+b7*x7)/(1+exp(b0+b1*x1+b2*x2+b3*x3+b4*x4+b5*x5+b6*x6+b7*x7))
#Use Negative so we can minimizing instead of maximizing
return(-sum(dbinom(y,size=1,prob=p.i,log=TRUE)))
}
logistic.NLL(b=rep(0,8))
library(numDeriv)
Newton.Method <- function(f, x0, max.iter = 200, stopping.deriv = 0.01, ...){
n    <- length(x0)
xmat <- matrix(0, nrow = n, ncol = max.iter)
xmat[,1] <- x0
for (k in 2:max.iter) {
# Calculate the gradient
grad.cur <- grad(f, xmat[ ,k-1], ...)
#Calculate the hessian
hess.cur <- hessian(f, xmat[ ,k-1], ... )
# Should we stop?
if (all(abs(grad.cur) < stopping.deriv)) {
k <- k-1; break
}
# Move in the opposite direction of the grad
#Use Inverse of hess.cur and matrix multiply with grad curve
xmat[ ,k] <- xmat[ ,k-1] - solve(hess.cur)%*%grad.cur
}
xmat <- xmat[ ,1:k] # Trim
return(list(x = xmat[,k],
xmat = xmat,
k = k,
minimum=f(xmat[,k],...)
)
)
}
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=prostate,family=binomial(link = "logit"))
model$coefficients
linear.pred <- predict(model,newdata=data.frame(X1=21.3, X2= 8.4, X3= 48.4, X4 = 68, X5= 4.7, X6 = 0, X7= 3.2))
probs <- exp(linear.pred)/(1+exp(linear.pred))
probs
set.seed(5)
B <- 1000
n <- nrow(prostate)
sample.matrix <- matrix(0,nrow=n,ncol=B)
for (b in 1:B) {
sample.matrix[,b] <- sample(1:n,replace=T)
}
n = 97
boot.coef<- function(sample.index, data=prostate){
resampled_rows <- sample.index
resampled_data <- prostate[resampled_rows, ]
Y <- resampled_data$Y
X1 <- resampled_data$X1
X2 <- resampled_data$X2
X3 <- resampled_data$X3
X4 <- resampled_data$X4
X5 <- resampled_data$X5
X6 <- resampled_data$X6
X7 <- resampled_data$X7
model <- glm(Y~X1+X2+X3+X4+X5+X6+X7,data=resampled_data,family=binomial(link = "logit"))
return(model$coefficients)
}
boot.coef(sample(1:n,n,replace=TRUE),data=prostate)
apply.boot<- apply(sample.matrix,2,boot.coef)
sd(apply.boot["X1",])
sd(apply.boot["X2",])
sd(apply.boot["X3",])
sd(apply.boot["X4",])
sd(apply.boot["X5",])
sd(apply.boot["X6",])
sd(apply.boot["X7",])
Cl.X1 <- quantile(apply.boot["X1", ], 0.05)
Cl.X2 <- quantile(apply.boot["X2", ], 0.05)
Cl.X3 <- quantile(apply.boot["X3", ], 0.05)
Cl.X4 <- quantile(apply.boot["X4", ], 0.05)
Cl.X5 <- quantile(apply.boot["X5", ], 0.05)
Cl.X6 <- quantile(apply.boot["X6", ], 0.05)
Cl.X7 <- quantile(apply.boot["X7", ], 0.05)
Cl.Y <- quantile(apply.boot["(Intercept)", ], 0.05)
Cu.X1 <- quantile(apply.boot["X1",], 0.095)
Cu.X2 <- quantile(apply.boot["X2",], 0.095)
Cu.X3 <- quantile(apply.boot["X3",], 0.095)
Cu.X4 <- quantile(apply.boot["X4",], 0.095)
Cu.X5 <- quantile(apply.boot["X5",], 0.095)
Cu.X6 <- quantile(apply.boot["X6",], 0.095)
Cu.X7 <- quantile(apply.boot["X7",], 0.095)
Cu.Y <- quantile(apply.boot["(Intercept)",], 0.095)
